  Error: Couldn't find script `script'

 See perf script -l for available scripts.


 Usage: perf script [<options>]
    or: perf script [<options>] record <script> [<record-options>] <command>
    or: perf script [<options>] report <script> [script-args]
    or: perf script [<options>] <script> [<record-options>] <command>
    or: perf script [<options>] <top-script> [script-args]

    -a, --all-cpus        system-wide collection from all CPUs
    -c, --comms <comm[,comm...]>
                          only display events for these comms
    -C, --cpu <cpu>       list of cpus to profile
    -d, --debug-mode      do various checks like samples ordering and lost events
    -D, --dump-raw-trace  dump raw trace in ASCII
    -F, --fields <str>    comma separated output fields prepend with 'type:'. +field to add and -field to remove.Valid types: hw,sw,trace,raw,synth. Fields: comm,tid,pid,time,cpu,event,trace,ip,sym,dso,addr,symoff,srcline,period,iregs,uregs,brstack,brstacksym,flags,brstackinsn,brstackoff,callindent,insn,insnlen,synth,phys_addr,metric,misc
    -f, --force           don't complain, do it
    -g, --gen-script <lang>
                          generate perf-script.xx script in specified language
    -G, --hide-call-graph
                          When printing symbols do not display call chain
    -i, --input <file>    input file name
    -I, --show-info       display extended information from perf.data file
    -k, --vmlinux <file>  vmlinux pathname
    -L, --Latency         show latency attributes (irqs/preemption disabled, etc)
    -l, --list            list available scripts
    -s, --script <name>   script file name (lang:script name, script name, or *)
    -S, --symbols <symbol[,symbol...]>
                          only consider these symbols
    -v, --verbose         be more verbose (show symbol address, etc)
        --call-ret-trace[=...]
                          Decode calls and returns from itrace
        --call-trace[=...]
                          Decode calls from from itrace
        --demangle        Enable symbol demangling
        --demangle-kernel
                          Enable kernel symbol demangling
        --full-source-path
                          Show full source file name path for source lines
        --graph-function <symbol[,symbol...]>
                          Only print symbols and callees with --call-trace/--call-ret-trace
        --header          Show data header.
        --header-only     Show only data header.
        --inline          Show inline function
        --insn-trace[=...]
                          Decode instructions from itrace
        --itrace[=<opts>]
                          Instruction Tracing options
				i:	    		synthesize instructions events
				b:	    		synthesize branches events
				c:	    		synthesize branches events (calls only)
				r:	    		synthesize branches events (returns only)
				x:	    		synthesize transactions events
				w:	    		synthesize ptwrite events
				p:	    		synthesize power events
				e:	    		synthesize error events
				d:	    		create a debug log
				g[len]:     		synthesize a call chain (use with i or x)
				l[len]:     		synthesize last branch entries (use with i or x)
				sNUMBER:    		skip initial number of events
				PERIOD[ns|us|ms|i|t]:   specify period to sample stream
				concatenate multiple options. Default is ibxwpe or cewp

        --kallsyms <file>
                          kallsyms pathname
        --max-blocks <n>  Maximum number of code blocks to dump with brstackinsn
        --max-stack <n>   Set the maximum stack depth when parsing the callchain, anything beyond the specified depth will be ignored. Default: kernel.perf_event_max_stack or 127
        --ns              Use 9 decimal places when displaying time
        --per-event-dump  Dump trace output to files named by the monitored events
        --pid <pid[,pid...]>
                          only consider symbols in these pids
        --show-kernel-path
                          Show the path of [kernel.kallsyms]
        --show-lost-events
                          Show lost events (if recorded)
        --show-mmap-events
                          Show the mmap events
        --show-round-events
                          Show round events (if recorded)
        --show-switch-events
                          Show context switch events (if recorded)
        --show-task-events
                          Show the fork/comm/exit events
        --stop-bt <symbol[,symbol...]>
                          Stop display of callgraph at these symbols
        --symfs <directory>
                          Look for files with symbols relative to this directory
        --tid <tid[,tid...]>
                          only consider symbols in these tids
        --time <str>      Time span of interest (start,stop)
        --xed[=...]       Run xed disassembler on output

